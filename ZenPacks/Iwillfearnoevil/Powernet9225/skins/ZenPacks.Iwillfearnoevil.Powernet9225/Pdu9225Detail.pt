<tal:block metal:use-macro="here/templates/macros/page2">
<tal:block metal:fill-slot="contentPane">

<form method="post" 
    name="Pdu9225Detail" tal:attributes="action string:${here/absolute_url_path}/${template/id}">

<tal:block metal:define-macro="Pdu9225FormList"
    tal:define="tableName string:Pdu9225FormList;
    objects here/PduOutlet9225/objectValuesAll;
    tabletitle string:PDU Outlet Status Table;
    batch python:here.ZenTableManager.getBatch(tableName,objects);
    menu_id string:PduOutlet9225;
    showfilterbox python:True;">
<input type='hidden' name='tableName' tal:attributes="value tableName" />
<input type="hidden" name="zenScreenName" tal:attributes="value template/id"/> 
    
<tal:block metal:use-macro="here/zenuimacros/macros/zentable">
<tal:block metal:fill-slot="zentablecontents">

<!-- BEGIN TABLE CONTENTS -->
    <tr tal:condition="objects">

        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(tableName,'OutletController','PDU Controller', attributes='width=20')"/>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(tableName,'OutletNumber','Outlet Number', attributes='width=20')"/>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(tableName,'State','State', attributes='width=20')"/>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(tableName,'DeviceControlled','Device Controlled', attributes='width=20')"/>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(tableName,'State','On', attributes='width=20')"/>

    </tr>
    <tr tal:condition="not:objects">
        <th class="tableheader" align="left" colspan="9">
            No outlets found. Double check you have the correct collector plugin and you have remodeled.
        </th>
    </tr>

<!-- the tal:repeat statement takes a variable name and an expression.  The expression should evaluate to 
     a sequence - in this case the expression is "batch" and will be the table of values for the 
     attributes / methods on the PduOutlet relation.
     The variable is a local variable - here the variable name "Pdu9225" is used.  For each repetition, 
     the local variable is set to the current sequence element. -->

    <tal:block tal:repeat="Pdu9225 batch">

<!-- In order to have our rows alternate colors, we'll use the useful TALES attribute odd,
     which is True for every other item in a tal:repeat loop  -->

    <tr tal:define="odd repeat/Pdu9225/odd"
        tal:attributes="class python:test(odd, 'odd', 'even')">
        
      
      <td class="tablevalues">
        <a class=tablevalues tal:content="Pdu9225/OutletController" 
        tal:attributes="href Pdu9225/getPrimaryUrlPath">BlaBla</a>
      </td>
      
      <td class="tablevalues">
        <a class=tablevalues tal:content="Pdu9225/OutletNumber" 
        tal:attributes="href Pdu9225/getPrimaryUrlPath">BlaBla</a>
      </td>
      <td class="tablevalues">
        <a class=tablevalues tal:content="Pdu9225/State" 
        tal:attributes="href Pdu9225/getPrimaryUrlPath">BlaBla</a>
      </td>
      <td class="tablevalues">
        <a class=tablevalues tal:content="Pdu9225/DeviceControlled" 
        tal:attributes="href Pdu9225/getPrimaryUrlPath">BlaBla</a>
      </td>
<!--      <td class="tablevalues" tal:content="Pdu9225/getIpRemoteAddress">Nomatch </td>
      <td class="tablevalues" tal:content="Pdu9225/getIpRemoteHostname">Nomatch </td>
      <td class="tablevalues" tal:content="Pdu9225/getIpRemoteIfDesc">Nomatch </td>
      <td class="tablevalues" 
		tal:content="python:Pdu9225.PortStatus==3 and 'Learned (3)' or 'Not active (' + str(Pdu9225.PortStatus) + ')'">
                   Learned
      </td>
-->      
      <td class="tablevalues" align="left">
      <img border="0"
        tal:attributes="src python:test(Pdu9225.State==1,
    	    here.getStatusImgSrc(0),
            here.getStatusImgSrc(3))" />
      </td>

     </tr>
    </tal:block>
    <tr>
        <td colspan="9" class="tableheader" align='center'>

<!-- The here/zenTableNavigation/macros/navtool doesn't seem to support table filtering and "Show all"
     although it does support sorting.  The here/zenTableNavigation/macros/navbodypagedevice
     seems to support sorting, filtering and breaking into pages / show all   -->

<!--            <form metal:use-macro="here/zenTableNavigation/macros/navtool"></form> -->
            <span metal:use-macro="here/zenTableNavigation/macros/navbodypagedevice" />
        </td>
    </tr>

<!-- END TABLE CONTENTS -->

</tal:block>
</tal:block>
</tal:block>

</form>

</tal:block>
</tal:block>
